{"ast":null,"code":"var _jsxFileName = \"/home/keshavaram/WebstormProjects/weather/frontend/src/App.js\";\nimport React from \"react\";\nimport './style.css';\nimport cloud from './cloud.png';\nimport rain from './rain.png';\nimport sunny from './sun.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Weather extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentData: {\n        \"content\": \"none\"\n      },\n      forecastData: {\n        \"list\": \"none\"\n      },\n      image: null,\n      description: \"\",\n      temperature: \"\",\n      city: \"\"\n    };\n    this.fetchCurrentData = this.fetchCurrentData.bind(this);\n  }\n\n  async fetchCurrentData() {\n    const response = await fetch(\"http://localhost:8000/current\");\n    const jsonData = await response.json();\n    this.setState({\n      data: jsonData\n    });\n  }\n\n  async fetchForecastData() {\n    const response = await fetch(\"http://localhost:8000/forecast\");\n    const jsonData = await response.json();\n    this.setState({\n      forecastData: jsonData\n    });\n  }\n\n  componentWillMount() {\n    this.fetchCurrentData().then(() => {\n      console.log(\"Fetch completed\");\n      this.setState({\n        description: this.state.data.weather[0].description\n      });\n\n      switch (this.state.data.weather[0].main) {\n        case \"Clouds\":\n        case \"Mist\":\n          this.setState({\n            image: cloud\n          });\n          break;\n\n        case \"Rain\":\n        case \"Drizzle\":\n          this.setState({\n            image: rain\n          });\n          break;\n\n        case \"Clear\":\n          this.setState({\n            image: sunny\n          });\n          break;\n      }\n\n      this.setState({\n        temperature: this.state.data.main.temp.toString()\n      });\n    });\n    this.fetchForecastData().then(() => {\n      console.log(\"fetch completed\");\n      this.setState({\n        city: this.state.forecastData.city.name\n      });\n      console.log(this.state.city);\n      console.log(this.state.forecastData.list);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"weatherCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Current Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"...\",\n          src: this.state.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [this.state.temperature, /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 49\n          }, this), \"C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.state.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"forecast\",\n        children: this.state.forecastData.list.map(each => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: each.temp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["/home/keshavaram/WebstormProjects/weather/frontend/src/App.js"],"names":["React","cloud","rain","sunny","Weather","Component","constructor","state","currentData","forecastData","image","description","temperature","city","fetchCurrentData","bind","response","fetch","jsonData","json","setState","data","fetchForecastData","componentWillMount","then","console","log","weather","main","temp","toString","name","list","render","map","each"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './style.css'\nimport cloud from './cloud.png'\nimport rain from './rain.png'\nimport sunny from './sun.png'\n\n\n\nclass Weather extends React.Component\n{\n    constructor() {\n        super();\n        this.state = {\n            currentData : {\"content\" : \"none\"},\n            forecastData : {\"list\" : \"none\"},\n            image : null,\n            description : \"\",\n            temperature : \"\",\n            city : \"\"\n        }\n        this.fetchCurrentData = this.fetchCurrentData.bind(this);\n    }\n\n    async fetchCurrentData()\n    {\n        const response = await fetch(\"http://localhost:8000/current\");\n        const jsonData = await response.json();\n        this.setState({data : jsonData});\n    }\n\n    async fetchForecastData()\n    {\n        const response = await fetch(\"http://localhost:8000/forecast\");\n        const jsonData = await response.json();\n        this.setState({forecastData : jsonData});\n    }\n\n    componentWillMount() {\n        this.fetchCurrentData()\n            .then(() => {\n                console.log(\"Fetch completed\");\n                this.setState({description : this.state.data.weather[0].description});\n                switch (this.state.data.weather[0].main)\n                {\n                    case \"Clouds\": case \"Mist\" : this.setState({image : cloud});break;\n                    case \"Rain\": case \"Drizzle\": this.setState({image : rain});break;\n                    case \"Clear\" : this.setState({image : sunny});break;\n                }\n                this.setState({temperature : this.state.data.main.temp.toString()})\n            });\n\n        this.fetchForecastData()\n            .then(() =>\n            {\n                console.log(\"fetch completed\")\n                this.setState({city : this.state.forecastData.city.name});\n                console.log(this.state.city);\n                console.log(this.state.forecastData.list)\n            })\n    }\n\n    render()\n    {\n        return(\n            <section id={\"weatherCard\"}>\n                <h1>Current Weather</h1>\n                <div>\n                    <img alt={\"...\"} src={this.state.image}/>\n                    <h1>{this.state.temperature}<sup>o</sup>C</h1>\n                </div>\n                <h2>{this.state.description}</h2>\n\n                <section id={\"forecast\"}>\n                    {\n                        this.state.forecastData.list.map((each) =>\n                        {\n                            return(\n                                <div>\n                                    {each.temp}\n                                </div>\n                            )\n                        })\n                    }\n                </section>\n\n            </section>\n        )\n    }\n}\n\nexport default Weather\n"]},"metadata":{},"sourceType":"module"}