{"ast":null,"code":"var _jsxFileName = \"/home/keshavaram/WebstormProjects/weather/frontend/src/App.js\";\nimport React from \"react\";\nimport './style.css';\nimport cloud from './cloud.png';\nimport rain from './rain.png';\nimport sunny from './sun.png';\nimport loc from './loc.png';\nimport temp from './temp.png';\nimport realFeel from './realFeel.svg';\nimport pressure from './pressure.png';\nimport wind from './wind.png';\nimport humidity from './humidity.png';\nimport fog from './fog.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentData: {\n        \"content\": \"none\"\n      },\n      forecastData: [],\n      image: null,\n      description: \"\",\n      temperature: \"\",\n      city: \"\",\n      realFeel: \"\",\n      max: \"\",\n      min: \"\",\n      humidity: \"\",\n      pressure: \"\",\n      wind: \"\"\n    };\n    this.fetchCurrentData = this.fetchCurrentData.bind(this);\n    this.daySelect = this.daySelect.bind(this);\n    this.fetchForecastData();\n  }\n\n  async fetchCurrentData() {\n    const response = await fetch(\"http://localhost:8000/current\");\n    const jsonData = await response.json();\n    this.setState({\n      currentData: jsonData\n    });\n  }\n\n  async fetchForecastData() {\n    const response = await fetch(\"http://localhost:8000/forecast\");\n    const jsonData = await response.json();\n    this.setState({\n      forecastData: jsonData\n    });\n  }\n\n  componentDidMount() {\n    this.fetchCurrentData().then(() => {\n      this.setState({\n        description: this.state.currentData.weather[0].description\n      });\n\n      switch (this.state.currentData.weather[0].main) {\n        case \"Clouds\":\n        case \"Mist\":\n          this.setState({\n            image: cloud\n          });\n          break;\n\n        case \"Rain\":\n        case \"Drizzle\":\n          this.setState({\n            image: rain\n          });\n          break;\n\n        case \"Clear\":\n          this.setState({\n            image: sunny\n          });\n          break;\n\n        case \"Haze\":\n        case \"Foggy\":\n        case \"Fog\":\n          this.setState({\n            image: fog\n          });\n          break;\n      }\n\n      this.setState({\n        temperature: this.state.currentData.main.temp.toString()\n      });\n      this.setState({\n        realFeel: this.state.currentData.main.feels_like\n      });\n      this.setState({\n        max: this.state.currentData.main.temp_max\n      });\n      this.setState({\n        min: this.state.currentData.main.temp_min\n      });\n      this.setState({\n        humidity: this.state.currentData.main.humidity\n      });\n      this.setState({\n        pressure: this.state.currentData.main.pressure\n      });\n      this.setState({\n        wind: this.state.currentData.wind.speed\n      });\n      this.setState({\n        city: this.state.currentData.name\n      });\n    }); // this.fetchForecastData()\n  }\n\n  async daySelect(event) {\n    console.log(event.target.value + \" was selected\");\n    const response = await fetch(\"http://localhost:8000/forecast/:\" + event.target.value);\n    const jsonData = await response.json();\n    this.setState({\n      forecastData: jsonData\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"weatherCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"location\",\n        style: {\n          \"display\": \"flex\",\n          \"flexDirection\": \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"forecastImage\",\n          alt: \"...\",\n          src: loc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          id: \"city\",\n          children: [\"Weather in \", this.state.city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"daySelect\",\n          onChange: this.daySelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Monday\",\n            children: \"Monday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Tuesday\",\n            children: \"Tuesday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Wednesday\",\n            children: \"Wednesday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"Thursday\",\n            children: \"Thursday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"Friday\",\n            children: \"Friday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"Saturday\",\n            children: \"Saturday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"Sunday\",\n            children: \"Sunday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"current\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"mainImage\",\n            alt: \"...\",\n            src: this.state.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [this.state.temperature, /*#__PURE__*/_jsxDEV(\"sup\", {\n              children: \"o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 53\n            }, this), \"C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: this.state.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              \"display\": \"flex\",\n              \"flexDirection\": \"row\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"forecastImage\",\n              alt: \"...\",\n              src: realFeel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\" RealFeel \", this.state.realFeel, /*#__PURE__*/_jsxDEV(\"sup\", {\n                children: \"o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 64\n              }, this), \"C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              \"display\": \"flex\",\n              \"flexDirection\": \"row\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"forecastImage\",\n              alt: \"...\",\n              src: temp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [this.state.max, /*#__PURE__*/_jsxDEV(\"sup\", {\n                children: \"o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 49\n              }, this), \"c / \", this.state.min, /*#__PURE__*/_jsxDEV(\"sup\", {\n                children: \"o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 81\n              }, this), \"c\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              \"display\": \"flex\",\n              \"flexDirection\": \"row\",\n              \"fontSize\": \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"forecastImage\",\n              alt: \"...\",\n              src: wind\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                \"paddingTop\": \"8px\"\n              },\n              children: [this.state.wind, \" m/s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              \"display\": \"flex\",\n              \"flexDirection\": \"row\",\n              \"fontSize\": \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"forecastImage\",\n              alt: \"...\",\n              src: pressure\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [this.state.pressure, \" Pa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              \"display\": \"flex\",\n              \"flexDirection\": \"row\",\n              \"fontSize\": \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"forecastImage\",\n              alt: \"...\",\n              src: humidity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [this.state.humidity, \" Kg/m\", /*#__PURE__*/_jsxDEV(\"sup\", {\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 59\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"forecast\",\n        children: this.state.forecastData.map(each => {\n          let forecastImage = null;\n\n          switch (each.weather[0].main) {\n            case \"Clouds\":\n            case \"Mist\":\n              forecastImage = cloud;\n              break;\n\n            case \"Rain\":\n            case \"Drizzle\":\n              forecastImage = rain;\n              break;\n\n            case \"Clear\":\n              forecastImage = sunny;\n              break;\n\n            case \"Haze\":\n            case \"Foggy\":\n            case \"Fog\":\n              forecastImage = fog;\n              break;\n          }\n\n          return /*#__PURE__*/_jsxDEV(PredictedWeather, {\n            image: forecastImage,\n            time: each.dt_txt.split(\" \")[1],\n            temp: each.main.temp\n          }, each.dt_txt.split(\" \")[1], false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst PredictedWeather = _ref => {\n  let {\n    image,\n    time,\n    temp\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"forecastCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"...\",\n      className: \"forecastImage\",\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [temp, /*#__PURE__*/_jsxDEV(\"sup\", {\n        children: \"o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }, this), \"C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PredictedWeather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"PredictedWeather\");","map":{"version":3,"sources":["/home/keshavaram/WebstormProjects/weather/frontend/src/App.js"],"names":["React","cloud","rain","sunny","loc","temp","realFeel","pressure","wind","humidity","fog","Weather","Component","constructor","props","state","currentData","forecastData","image","description","temperature","city","max","min","fetchCurrentData","bind","daySelect","fetchForecastData","response","fetch","jsonData","json","setState","componentDidMount","then","weather","main","toString","feels_like","temp_max","temp_min","speed","name","event","console","log","target","value","render","map","each","forecastImage","dt_txt","split","PredictedWeather","time"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './style.css'\nimport cloud from './cloud.png'\nimport rain from './rain.png'\nimport sunny from './sun.png'\nimport loc from './loc.png'\nimport temp from './temp.png'\nimport realFeel from './realFeel.svg'\nimport pressure from './pressure.png'\nimport wind from './wind.png'\nimport humidity from './humidity.png'\nimport fog from './fog.png'\n\nclass Weather extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentData : {\"content\" : \"none\"},\n            forecastData : [],\n            image : null,\n            description : \"\",\n            temperature : \"\",\n            city : \"\",\n            realFeel : \"\",\n            max : \"\",\n            min : \"\",\n            humidity : \"\",\n            pressure : \"\",\n            wind : \"\"\n        }\n        this.fetchCurrentData = this.fetchCurrentData.bind(this);\n        this.daySelect = this.daySelect.bind(this);\n\n        this.fetchForecastData()\n    }\n\n    async fetchCurrentData()\n    {\n        const response = await fetch(\"http://localhost:8000/current\");\n        const jsonData = await response.json();\n        this.setState({currentData : jsonData});\n    }\n\n    async fetchForecastData()\n    {\n        const response = await fetch(\"http://localhost:8000/forecast\");\n        const jsonData = await response.json();\n        this.setState({forecastData : jsonData});\n    }\n\n    componentDidMount() {\n        this.fetchCurrentData()\n            .then(() => {\n                this.setState({description : this.state.currentData.weather[0].description});\n                switch (this.state.currentData.weather[0].main)\n                {\n                    case \"Clouds\": case \"Mist\" : this.setState({image : cloud});break;\n                    case \"Rain\": case \"Drizzle\": this.setState({image : rain});break;\n                    case \"Clear\" : this.setState({image : sunny});break;\n                    case \"Haze\" : case \"Foggy\":case \"Fog\": this.setState({image : fog});break;\n                }\n                this.setState({temperature : this.state.currentData.main.temp.toString()});\n                this.setState({realFeel : this.state.currentData.main.feels_like});\n                this.setState({max : this.state.currentData.main.temp_max});\n                this.setState({min : this.state.currentData.main.temp_min});\n                this.setState({humidity : this.state.currentData.main.humidity});\n                this.setState({pressure : this.state.currentData.main.pressure});\n                this.setState({wind : this.state.currentData.wind.speed});\n                this.setState({city : this.state.currentData.name});\n            });\n        // this.fetchForecastData()\n    }\n\n    async daySelect(event)\n    {\n        console.log(event.target.value + \" was selected\")\n        const response = await fetch(\"http://localhost:8000/forecast/:\" + event.target.value);\n        const jsonData = await response.json();\n        this.setState({forecastData : jsonData});\n    }\n\n    render()\n    {\n        return(\n            <section id={\"weatherCard\"}>\n                <div id={\"location\"} style={{\"display\":\"flex\",\"flexDirection\" : \"row\"}}>\n                    <img className={\"forecastImage\"} alt={\"...\"} src={loc}/>\n                    <h3 id={\"city\"}>Weather in {this.state.city}</h3>\n                    <select id={\"daySelect\"} onChange={this.daySelect}>\n                        <option value={\"Monday\"}>Monday</option>\n                        <option value={\"Tuesday\"}>Tuesday</option>\n                        <option value={\"Wednesday\"}>Wednesday</option>\n                        <option name={\"Thursday\"}>Thursday</option>\n                        <option name={\"Friday\"}>Friday</option>\n                        <option name={\"Saturday\"}>Saturday</option>\n                        <option name={\"Sunday\"}>Sunday</option>\n                    </select>\n                </div>\n                <section id={\"current\"}>\n                    <div>\n                        <img id={\"mainImage\"} alt={\"...\"} src={this.state.image}/>\n                        <h1>{this.state.temperature}<sup>o</sup>C</h1>\n                        <h2>{this.state.description}</h2>\n                    </div>\n                    <div>\n                        <div style={{\"display\":\"flex\",\"flexDirection\" : \"row\"}}>\n                            <img className={\"forecastImage\"} alt={\"...\"} src={realFeel}/>\n                            <h1> RealFeel {this.state.realFeel}<sup>o</sup>C</h1>\n                        </div>\n                        <div style={{\"display\":\"flex\",\"flexDirection\" : \"row\"}}>\n                            <img className={\"forecastImage\"} alt={\"...\"} src={temp}/>\n                            <h1>{this.state.max}<sup>o</sup>c / {this.state.min}<sup>o</sup>c</h1>\n                        </div>\n                        <div style={{\"display\":\"flex\",\"flexDirection\" : \"row\",\"fontSize\":\"20px\"}}>\n                            <img className={\"forecastImage\"} alt={\"...\"} src={wind}/>\n                            <h1 style={{\"paddingTop\" : \"8px\"}}>{this.state.wind} m/s</h1>\n                        </div>\n                    </div>\n                    <div>\n                        <div style={{\"display\":\"flex\",\"flexDirection\" : \"row\",\"fontSize\":\"20px\"}}>\n                            <img className={\"forecastImage\"} alt={\"...\"} src={pressure}/>\n                            <h1>{this.state.pressure} Pa</h1>\n                        </div>\n                        <div style={{\"display\":\"flex\",\"flexDirection\" : \"row\",\"fontSize\":\"20px\"}}>\n                            <img className={\"forecastImage\"} alt={\"...\"} src={humidity}/>\n                            <h1>{this.state.humidity} Kg/m<sup>3</sup></h1>\n                        </div>\n                    </div>\n                </section>\n                <section id={\"forecast\"}>\n                    {\n                        this.state.forecastData.map((each) =>\n                        {\n                            let forecastImage =null;\n                            switch(each.weather[0].main)\n                            {\n                                case \"Clouds\": case \"Mist\" : forecastImage = cloud;break;\n                                case \"Rain\": case \"Drizzle\": forecastImage = rain;break;\n                                case \"Clear\" : forecastImage = sunny;break;\n                                case \"Haze\" : case \"Foggy\":case \"Fog\": forecastImage = fog;break;\n                            }\n                            return(<PredictedWeather image={forecastImage} time={each.dt_txt.split(\" \")[1]} temp={each.main.temp} key={each.dt_txt.split(\" \")[1]}/>)\n                        })\n                    }\n                </section>\n            </section>\n        )\n    }\n}\n\nconst PredictedWeather = ({image,time,temp}) =>\n{\n    return(\n        <section id={\"forecastCard\"}>\n            <img alt={\"...\"} className={\"forecastImage\"} src={image}/>\n            <h4>{temp}<sup>o</sup>C</h4>\n            <h6>{time}</h6>\n        </section>\n    )\n}\n\nexport default Weather\n"]},"metadata":{},"sourceType":"module"}